//
// Entity.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct Entity: Codable, Hashable {

    public var id: String?
    public var typeId: String?
    public var url: String?

    public init(id: String? = nil, typeId: String? = nil, url: String? = nil) {
        self.id = id
        self.typeId = typeId
        self.url = url
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case typeId
        case url
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(typeId, forKey: .typeId)
        try container.encodeIfPresent(url, forKey: .url)
    }



}
