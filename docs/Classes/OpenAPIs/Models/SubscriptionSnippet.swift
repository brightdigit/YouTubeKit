//
// SubscriptionSnippet.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

/** Basic details about a subscription, including title, description and thumbnails of the subscribed item. */
public struct SubscriptionSnippet: Codable, Hashable {

    /** The ID that YouTube uses to uniquely identify the subscriber&#39;s channel. */
    public var channelId: String?
    /** Channel title for the channel that the subscription belongs to. */
    public var channelTitle: String?
    /** The subscription&#39;s details. */
    public var description: String?
    /** The date and time that the subscription was created. */
    public var publishedAt: Date?
    public var resourceId: ResourceId?
    public var thumbnails: ThumbnailDetails?
    /** The subscription&#39;s title. */
    public var title: String?

    public init(channelId: String? = nil, channelTitle: String? = nil, description: String? = nil, publishedAt: Date? = nil, resourceId: ResourceId? = nil, thumbnails: ThumbnailDetails? = nil, title: String? = nil) {
        self.channelId = channelId
        self.channelTitle = channelTitle
        self.description = description
        self.publishedAt = publishedAt
        self.resourceId = resourceId
        self.thumbnails = thumbnails
        self.title = title
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case channelId
        case channelTitle
        case description
        case publishedAt
        case resourceId
        case thumbnails
        case title
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(channelId, forKey: .channelId)
        try container.encodeIfPresent(channelTitle, forKey: .channelTitle)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(publishedAt, forKey: .publishedAt)
        try container.encodeIfPresent(resourceId, forKey: .resourceId)
        try container.encodeIfPresent(thumbnails, forKey: .thumbnails)
        try container.encodeIfPresent(title, forKey: .title)
    }



}
