//
// VideoProcessingDetails.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

/** Describes processing status and progress and availability of some other Video resource parts. */
public struct VideoProcessingDetails: Codable, Hashable {

    public enum ProcessingFailureReason: String, Codable, CaseIterable {
        case uploadfailed = "uploadFailed"
        case transcodefailed = "transcodeFailed"
        case streamingfailed = "streamingFailed"
        case other = "other"
    }
    public enum ProcessingStatus: String, Codable, CaseIterable {
        case processing = "processing"
        case succeeded = "succeeded"
        case failed = "failed"
        case terminated = "terminated"
    }
    /** This value indicates whether video editing suggestions, which might improve video quality or the playback experience, are available for the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request. */
    public var editorSuggestionsAvailability: String?
    /** This value indicates whether file details are available for the uploaded video. You can retrieve a video&#39;s file details by requesting the fileDetails part in your videos.list() request. */
    public var fileDetailsAvailability: String?
    /** The reason that YouTube failed to process the video. This property will only have a value if the processingStatus property&#39;s value is failed. */
    public var processingFailureReason: ProcessingFailureReason?
    /** This value indicates whether the video processing engine has generated suggestions that might improve YouTube&#39;s ability to process the the video, warnings that explain video processing problems, or errors that cause video processing problems. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request. */
    public var processingIssuesAvailability: String?
    public var processingProgress: VideoProcessingDetailsProcessingProgress?
    /** The video&#39;s processing status. This value indicates whether YouTube was able to process the video or if the video is still being processed. */
    public var processingStatus: ProcessingStatus?
    /** This value indicates whether keyword (tag) suggestions are available for the video. Tags can be added to a video&#39;s metadata to make it easier for other users to find the video. You can retrieve these suggestions by requesting the suggestions part in your videos.list() request. */
    public var tagSuggestionsAvailability: String?
    /** This value indicates whether thumbnail images have been generated for the video. */
    public var thumbnailsAvailability: String?

    public init(editorSuggestionsAvailability: String? = nil, fileDetailsAvailability: String? = nil, processingFailureReason: ProcessingFailureReason? = nil, processingIssuesAvailability: String? = nil, processingProgress: VideoProcessingDetailsProcessingProgress? = nil, processingStatus: ProcessingStatus? = nil, tagSuggestionsAvailability: String? = nil, thumbnailsAvailability: String? = nil) {
        self.editorSuggestionsAvailability = editorSuggestionsAvailability
        self.fileDetailsAvailability = fileDetailsAvailability
        self.processingFailureReason = processingFailureReason
        self.processingIssuesAvailability = processingIssuesAvailability
        self.processingProgress = processingProgress
        self.processingStatus = processingStatus
        self.tagSuggestionsAvailability = tagSuggestionsAvailability
        self.thumbnailsAvailability = thumbnailsAvailability
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case editorSuggestionsAvailability
        case fileDetailsAvailability
        case processingFailureReason
        case processingIssuesAvailability
        case processingProgress
        case processingStatus
        case tagSuggestionsAvailability
        case thumbnailsAvailability
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(editorSuggestionsAvailability, forKey: .editorSuggestionsAvailability)
        try container.encodeIfPresent(fileDetailsAvailability, forKey: .fileDetailsAvailability)
        try container.encodeIfPresent(processingFailureReason, forKey: .processingFailureReason)
        try container.encodeIfPresent(processingIssuesAvailability, forKey: .processingIssuesAvailability)
        try container.encodeIfPresent(processingProgress, forKey: .processingProgress)
        try container.encodeIfPresent(processingStatus, forKey: .processingStatus)
        try container.encodeIfPresent(tagSuggestionsAvailability, forKey: .tagSuggestionsAvailability)
        try container.encodeIfPresent(thumbnailsAvailability, forKey: .thumbnailsAvailability)
    }



}
