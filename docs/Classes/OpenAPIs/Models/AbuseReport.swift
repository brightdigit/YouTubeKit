//
// AbuseReport.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct AbuseReport: Codable, Hashable {

    public var abuseTypes: [AbuseType]?
    public var description: String?
    public var relatedEntities: [RelatedEntity]?
    public var subject: Entity?

    public init(abuseTypes: [AbuseType]? = nil, description: String? = nil, relatedEntities: [RelatedEntity]? = nil, subject: Entity? = nil) {
        self.abuseTypes = abuseTypes
        self.description = description
        self.relatedEntities = relatedEntities
        self.subject = subject
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case abuseTypes
        case description
        case relatedEntities
        case subject
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(abuseTypes, forKey: .abuseTypes)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(relatedEntities, forKey: .relatedEntities)
        try container.encodeIfPresent(subject, forKey: .subject)
    }



}
