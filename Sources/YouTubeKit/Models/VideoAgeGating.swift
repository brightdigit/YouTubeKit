//
// VideoAgeGating.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct VideoAgeGating: Codable, Hashable {

    public enum VideoGameRating: String, Codable, CaseIterable {
        case anyone = "anyone"
        case m15plus = "m15Plus"
        case m16plus = "m16Plus"
        case m17plus = "m17Plus"
    }
    /** Indicates whether or not the video has alcoholic beverage content. Only users of legal purchasing age in a particular country, as identified by ICAP, can view the content. */
    public var alcoholContent: Bool?
    /** Age-restricted trailers. For redband trailers and adult-rated video-games. Only users aged 18+ can view the content. The the field is true the content is restricted to viewers aged 18+. Otherwise The field won&#39;t be present. */
    public var restricted: Bool?
    /** Video game rating, if any. */
    public var videoGameRating: VideoGameRating?

    public init(alcoholContent: Bool? = nil, restricted: Bool? = nil, videoGameRating: VideoGameRating? = nil) {
        self.alcoholContent = alcoholContent
        self.restricted = restricted
        self.videoGameRating = videoGameRating
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case alcoholContent
        case restricted
        case videoGameRating
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(alcoholContent, forKey: .alcoholContent)
        try container.encodeIfPresent(restricted, forKey: .restricted)
        try container.encodeIfPresent(videoGameRating, forKey: .videoGameRating)
    }



}
