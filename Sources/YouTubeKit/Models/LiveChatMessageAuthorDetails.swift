//
// LiveChatMessageAuthorDetails.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct LiveChatMessageAuthorDetails: Codable, Hashable {

    /** The YouTube channel ID. */
    public var channelId: String?
    /** The channel&#39;s URL. */
    public var channelUrl: String?
    /** The channel&#39;s display name. */
    public var displayName: String?
    /** Whether the author is a moderator of the live chat. */
    public var isChatModerator: Bool?
    /** Whether the author is the owner of the live chat. */
    public var isChatOwner: Bool?
    /** Whether the author is a sponsor of the live chat. */
    public var isChatSponsor: Bool?
    /** Whether the author&#39;s identity has been verified by YouTube. */
    public var isVerified: Bool?
    /** The channels&#39;s avatar URL. */
    public var profileImageUrl: String?

    public init(channelId: String? = nil, channelUrl: String? = nil, displayName: String? = nil, isChatModerator: Bool? = nil, isChatOwner: Bool? = nil, isChatSponsor: Bool? = nil, isVerified: Bool? = nil, profileImageUrl: String? = nil) {
        self.channelId = channelId
        self.channelUrl = channelUrl
        self.displayName = displayName
        self.isChatModerator = isChatModerator
        self.isChatOwner = isChatOwner
        self.isChatSponsor = isChatSponsor
        self.isVerified = isVerified
        self.profileImageUrl = profileImageUrl
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case channelId
        case channelUrl
        case displayName
        case isChatModerator
        case isChatOwner
        case isChatSponsor
        case isVerified
        case profileImageUrl
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(channelId, forKey: .channelId)
        try container.encodeIfPresent(channelUrl, forKey: .channelUrl)
        try container.encodeIfPresent(displayName, forKey: .displayName)
        try container.encodeIfPresent(isChatModerator, forKey: .isChatModerator)
        try container.encodeIfPresent(isChatOwner, forKey: .isChatOwner)
        try container.encodeIfPresent(isChatSponsor, forKey: .isChatSponsor)
        try container.encodeIfPresent(isVerified, forKey: .isVerified)
        try container.encodeIfPresent(profileImageUrl, forKey: .profileImageUrl)
    }



}
