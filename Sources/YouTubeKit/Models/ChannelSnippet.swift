//
// ChannelSnippet.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

/** Basic details about a channel, including title, description and thumbnails. */
public struct ChannelSnippet: Codable, Hashable {

    /** The country of the channel. */
    public var country: String?
    /** The custom url of the channel. */
    public var customUrl: String?
    /** The language of the channel&#39;s default title and description. */
    public var defaultLanguage: String?
    /** The description of the channel. */
    public var description: String?
    public var localized: ChannelLocalization?
    /** The date and time that the channel was created. */
    public var publishedAt: Date?
    public var thumbnails: ThumbnailDetails?
    /** The channel&#39;s title. */
    public var title: String?

    public init(country: String? = nil, customUrl: String? = nil, defaultLanguage: String? = nil, description: String? = nil, localized: ChannelLocalization? = nil, publishedAt: Date? = nil, thumbnails: ThumbnailDetails? = nil, title: String? = nil) {
        self.country = country
        self.customUrl = customUrl
        self.defaultLanguage = defaultLanguage
        self.description = description
        self.localized = localized
        self.publishedAt = publishedAt
        self.thumbnails = thumbnails
        self.title = title
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case country
        case customUrl
        case defaultLanguage
        case description
        case localized
        case publishedAt
        case thumbnails
        case title
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(country, forKey: .country)
        try container.encodeIfPresent(customUrl, forKey: .customUrl)
        try container.encodeIfPresent(defaultLanguage, forKey: .defaultLanguage)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(localized, forKey: .localized)
        try container.encodeIfPresent(publishedAt, forKey: .publishedAt)
        try container.encodeIfPresent(thumbnails, forKey: .thumbnails)
        try container.encodeIfPresent(title, forKey: .title)
    }



}
