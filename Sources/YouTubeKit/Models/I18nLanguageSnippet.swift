//
// I18nLanguageSnippet.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

/** Basic details about an i18n language, such as language code and human-readable name. */
public struct I18nLanguageSnippet: Codable, Hashable {

    /** A short BCP-47 code that uniquely identifies a language. */
    public var hl: String?
    /** The human-readable name of the language in the language itself. */
    public var name: String?

    public init(hl: String? = nil, name: String? = nil) {
        self.hl = hl
        self.name = name
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case hl
        case name
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(hl, forKey: .hl)
        try container.encodeIfPresent(name, forKey: .name)
    }



}
