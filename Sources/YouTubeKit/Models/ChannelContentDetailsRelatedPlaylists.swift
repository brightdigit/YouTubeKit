//
// ChannelContentDetailsRelatedPlaylists.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct ChannelContentDetailsRelatedPlaylists: Codable, Hashable {

    /** The ID of the playlist that contains the channel\&quot;s favorite videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list. */
    public var favorites: String?
    /** The ID of the playlist that contains the channel\&quot;s liked videos. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list. */
    public var likes: String?
    /** The ID of the playlist that contains the channel\&quot;s uploaded videos. Use the videos.insert method to upload new videos and the videos.delete method to delete previously uploaded videos. */
    public var uploads: String?
    /** The ID of the playlist that contains the channel\&quot;s watch history. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list. */
    public var watchHistory: String?
    /** The ID of the playlist that contains the channel\&quot;s watch later playlist. Use the playlistItems.insert and playlistItems.delete to add or remove items from that list. */
    public var watchLater: String?

    public init(favorites: String? = nil, likes: String? = nil, uploads: String? = nil, watchHistory: String? = nil, watchLater: String? = nil) {
        self.favorites = favorites
        self.likes = likes
        self.uploads = uploads
        self.watchHistory = watchHistory
        self.watchLater = watchLater
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case favorites
        case likes
        case uploads
        case watchHistory
        case watchLater
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(favorites, forKey: .favorites)
        try container.encodeIfPresent(likes, forKey: .likes)
        try container.encodeIfPresent(uploads, forKey: .uploads)
        try container.encodeIfPresent(watchHistory, forKey: .watchHistory)
        try container.encodeIfPresent(watchLater, forKey: .watchLater)
    }



}
