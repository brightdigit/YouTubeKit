//
// InvideoBranding.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

/** LINT.IfChange Describes an invideo branding. */
public struct InvideoBranding: Codable, Hashable {

    /** The bytes the uploaded image. Only used in api to youtube communication. */
    public var imageBytes: Data?
    /** The url of the uploaded image. Only used in apiary to api communication. */
    public var imageUrl: String?
    public var position: InvideoPosition?
    /** The channel to which this branding links. If not present it defaults to the current channel. */
    public var targetChannelId: String?
    public var timing: InvideoTiming?

    public init(imageBytes: Data? = nil, imageUrl: String? = nil, position: InvideoPosition? = nil, targetChannelId: String? = nil, timing: InvideoTiming? = nil) {
        self.imageBytes = imageBytes
        self.imageUrl = imageUrl
        self.position = position
        self.targetChannelId = targetChannelId
        self.timing = timing
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case imageBytes
        case imageUrl
        case position
        case targetChannelId
        case timing
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(imageBytes, forKey: .imageBytes)
        try container.encodeIfPresent(imageUrl, forKey: .imageUrl)
        try container.encodeIfPresent(position, forKey: .position)
        try container.encodeIfPresent(targetChannelId, forKey: .targetChannelId)
        try container.encodeIfPresent(timing, forKey: .timing)
    }



}
