//
// SubscriptionContentDetails.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

/** Details about the content to witch a subscription refers. */
public struct SubscriptionContentDetails: Codable, Hashable {

    public enum ActivityType: String, Codable, CaseIterable {
        case subscriptionactivitytypeunspecified = "subscriptionActivityTypeUnspecified"
        case all = "all"
        case uploads = "uploads"
    }
    /** The type of activity this subscription is for (only uploads, everything). */
    public var activityType: ActivityType?
    /** The number of new items in the subscription since its content was last read. */
    public var newItemCount: Int?
    /** The approximate number of items that the subscription points to. */
    public var totalItemCount: Int?

    public init(activityType: ActivityType? = nil, newItemCount: Int? = nil, totalItemCount: Int? = nil) {
        self.activityType = activityType
        self.newItemCount = newItemCount
        self.totalItemCount = totalItemCount
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case activityType
        case newItemCount
        case totalItemCount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(activityType, forKey: .activityType)
        try container.encodeIfPresent(newItemCount, forKey: .newItemCount)
        try container.encodeIfPresent(totalItemCount, forKey: .totalItemCount)
    }



}
