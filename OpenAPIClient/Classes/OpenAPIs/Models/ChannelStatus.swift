//
// ChannelStatus.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

/** JSON template for the status part of a channel. */
public struct ChannelStatus: Codable, Hashable {

    public enum LongUploadsStatus: String, Codable, CaseIterable {
        case longuploadsunspecified = "longUploadsUnspecified"
        case allowed = "allowed"
        case eligible = "eligible"
        case disallowed = "disallowed"
    }
    public enum PrivacyStatus: String, Codable, CaseIterable {
        case _public = "public"
        case unlisted = "unlisted"
        case _private = "private"
    }
    /** If true, then the user is linked to either a YouTube username or G+ account. Otherwise, the user doesn&#39;t have a public YouTube identity. */
    public var isLinked: Bool?
    /** The long uploads status of this channel. See https://support.google.com/youtube/answer/71673 for more information. */
    public var longUploadsStatus: LongUploadsStatus?
    public var madeForKids: Bool?
    /** Privacy status of the channel. */
    public var privacyStatus: PrivacyStatus?
    public var selfDeclaredMadeForKids: Bool?

    public init(isLinked: Bool? = nil, longUploadsStatus: LongUploadsStatus? = nil, madeForKids: Bool? = nil, privacyStatus: PrivacyStatus? = nil, selfDeclaredMadeForKids: Bool? = nil) {
        self.isLinked = isLinked
        self.longUploadsStatus = longUploadsStatus
        self.madeForKids = madeForKids
        self.privacyStatus = privacyStatus
        self.selfDeclaredMadeForKids = selfDeclaredMadeForKids
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case isLinked
        case longUploadsStatus
        case madeForKids
        case privacyStatus
        case selfDeclaredMadeForKids
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(isLinked, forKey: .isLinked)
        try container.encodeIfPresent(longUploadsStatus, forKey: .longUploadsStatus)
        try container.encodeIfPresent(madeForKids, forKey: .madeForKids)
        try container.encodeIfPresent(privacyStatus, forKey: .privacyStatus)
        try container.encodeIfPresent(selfDeclaredMadeForKids, forKey: .selfDeclaredMadeForKids)
    }



}
